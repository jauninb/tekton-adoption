apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: containerize-task
spec:
  inputs:
    params:
      - name: task-pvc
        description: the task pvc - this is the volume where the files (Dockerfile etc..) are expected to be
      # - name: additionalTags
      #   type: array
      #   default: []
    # resources:
    #   # TODO consider an optional git repository as the source of the image to build
    #   # when cd tekton support will be to tekton pipeline v 0.10
    #   - name: workspace
    #     type: git
    #     optional: true
  outputs:
    resources:
      - name: builtImage1
        type: image
      - name: builtImage2
        type: image
  steps:
    - name: build-image
      image: ibmcom/pipeline-base-image
      workingDir: /steps
      command: ["/bin/bash", "-c"]
      args:
        - |


          echo "Creating OCI image index - index.json - out of the build.log to reference image sha: $MANIFEST_SHA"
          echo "{}" | \
          jq --arg manifest_sha "sha_image1" '{schemaVersion:2,manifests:[{"mediaType": "application/vnd.oci.image.manifest.v1+json", digest:$manifest_sha}]}' 2>&1 | \
          tee /workspace/output/builtImage1/index.json

          jq --arg manifest_sha "sha_image2" '{schemaVersion:2,manifests:[{"mediaType": "application/vnd.oci.image.manifest.v1+json", digest:$manifest_sha}]}' 2>&1 | \
          tee /workspace/output/builtImage2/index.json

          ls -l -R /workspace

          ls -l -R /builder

      volumeMounts:
        - mountPath: /artifacts
          name: task-volume
        - mountPath: /steps
          name: steps-volume
  volumes:
    - name: steps-volume
      emptyDir: {}
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.task-pvc)
