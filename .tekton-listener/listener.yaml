apiVersion: tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: trigger-template
spec:
  params:
    - name: repository
      description: The git repo
    - name: branch
      description: the branch for the git repo
    - name: revision
      description: |
        commitid of the git repository to fetch.
        Default to a single space string as a workaround until a null/empty param can flow to Task
        if not then the set value to the task will be the string "$(params.revision)"
      default: " "
    - name: repository2
      description: The second git repo
    - name: branch2
      description: the branch for the second git repo
      default: master
    - name: apikey
      description: the ibmcloud api key
    - name: containerRegistryToken
      description: Token to connect to IBM Container Registry to pull image
    - name: dockerconfigjson
      description: |
        content of .dockerconfigjson for a secret of type kubernetes.io/dockerconfigjson.
        This can be created using "kubectl create secret --dry-run=true -o yaml docker-registry tekton-adoption --docker-server=${REGISTRY_URL} --docker-password=${TOKEN} --docker-username=iamapikey --docker-email=a@b.com"
  resourcetemplates:
    # PVC definition like pre-tekton-0.10.1
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: pipelinerun-$(uid)-pvc
      spec:
        resources:
          requests:
            storage:  5Gi
        volumeMode: Filesystem
        accessModes:
          - ReadWriteOnce
    - apiVersion: v1
      kind: Secret
      metadata:
        name: cd-secret
      type: Opaque
      stringData:
        API_KEY: $(params.apikey)        
    # k8s resources to be able to pull docker image from a specific container registry
    # - apiVersion: v1
    #   kind: Secret
    #   metadata:
    #     name: private-registry-secret
    #   type: kubernetes.io/dockerconfigjson
    #   data:
    #     .dockerconfigjson: $(params.dockerconfigjson)
    # - apiVersion: v1
    #   kind: Secret
    #   metadata:
    #     name: private-registry-token
    #     annotations:
    #       tekton.dev/docker-0: https://registry.ng.bluemix.net
    #   type: kubernetes.io/basic-auth
    #   stringData:
    #     username: iamapikey
    #     password: $(params.containerRegistryToken)
    # - apiVersion: v1
    #   kind: ServiceAccount
    #   metadata:
    #     name: containerize-build-sa
    #   imagePullSecrets:
    #     - name: private-registry-secret
    - apiVersion: tekton.dev/v1alpha1
      kind: PipelineResource
      metadata:
        name: my-very-first-image
      spec:
        type: image
        params:
          - name: url
            value: de.icr.io/jauninb-tekton/my-very-first-image
    - apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: cluster-pipeline-resource-updater-account              
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: cluster-pipeline-resource-updater
      rules:
      - apiGroups:
        - tekton.dev
        resources:
        - taskruns
        verbs:
        - list
      - apiGroups:
        - tekton.dev
        resources:
        - pipelineresources
        verbs:
        - get
        - patch            
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: cluster-pipeline-resource-updater-binding
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: cluster-pipeline-resource-updater
      subjects:
      - kind: ServiceAccount
        name: cluster-pipeline-resource-updater-account
    - apiVersion: tekton.dev/v1alpha1
      kind: PipelineResource
      metadata:
        name: my-cluster
      spec:
        type: cluster
        params:
          - name: name
            value: mycluster
          - name: username
            value: username
          - name: url
            value: https://to.be.updated
          - name: token
            value: token
          - name: cadata
            value: cadata
    - apiVersion: tekton.dev/v1alpha1
      kind: PipelineRun
      metadata:
        name: pipelinerun-$(uid)
        labels:
          myownlabel/bjn: "monlabelamoi"
        annotations:
          myownannotation/bjn: "monannotationamoi"
      spec:
        pipelineRef:
          name: pipeline
        serviceAccounts:
          - taskName: pipeline-0-setup-task
            serviceAccount: cluster-pipeline-resource-updater-account
        resources:
          # - name: app-image
          #   resourceRef:
          #     name: my-very-first-image
          - name: target-cluster
            resourceRef:
              name: my-cluster
        params:
          - name: pipeline-pvc
            value: pipelinerun-$(uid)-pvc
          - name: repository
            value: $(params.repository)
          - name: branch
            value: $(params.branch)
          - name: revision
            value: $(params.revision)
          - name: repository2
            value: $(params.repository2)
          - name: branch2
            value: $(params.branch2)
---
apiVersion: tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: trigger-binding-dev
spec:
  params:
    - name: branch
      value: "master"
---
apiVersion: tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: trigger-binding-staging
spec:
  params:
    - name: branch
      value: "integration"
---
apiVersion: tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: trigger-binding-git-event-dev
spec:
  params:
    - name: repository
      value: $(event.repository.url)
    - name: revision
      value: $(event.head_commit.id)
    - name: branch
      value: "master"
---
apiVersion: tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: trigger-binding-git-event-staging
spec:
  params:
    - name: repository
      value: $(event.repository.url)
    - name: revision
      value: $(event.head_commit.id)
    - name: branch
      value: "unknown-integration"
---
apiVersion: tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: event-listener-dev
spec:
  triggers:
    - binding:
        name: trigger-binding-dev
      template:
        name: trigger-template
---
apiVersion: tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: event-listener-staging
spec:
  triggers:
    - binding:
        name: trigger-binding-staging
      template:
        name: trigger-template
---
apiVersion: tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: git-event-listener-dev
spec:
  triggers:
    - binding:
        name: trigger-binding-git-event-dev
      template:
        name: trigger-template
---
apiVersion: tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: git-event-listener-staging
spec:
  triggers:
    - binding:
        name: trigger-binding-git-event-staging
      template:
        name: trigger-template
