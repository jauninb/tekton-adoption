apiVersion: tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: trigger-template-simple-clone
spec:
  params:
    - name: repository
      description: The git repo
    - name: branch
      description: the branch for the git repo
    - name: api
      description: the ibmcloud api
      default: https://cloud.ibm.com
    - name: apikey
      description: the ibmcloud api key
    - name: toolchainRegion
      description: the ibmcloud region containing the toolchain referencing the repository
      default: us-south
    - name: toolchainId
      description: The IBM Cloud Kubernetes cluster region
    - name: containerRegistryToken
      description: Token to connect to IBM Container Registry to pull image
    - name: dockerconfigjson
      description: |
        content of .dockerconfigjson for a secret of type kubernetes.io/dockerconfigjson.
        This can be created using "kubectl create secret --dry-run=true -o yaml docker-registry tekton-adoption --docker-server=${REGISTRY_URL} --docker-password=${TOKEN} --docker-username=iamapikey --docker-email=a@b.com"
  resourcetemplates:
    # CD context defined as a configmap because it is immutable information
    - apiVersion: v1
      kind: ConfigMap
      metadata:
        name: cd-config
      data:
        API: $(params.api)
        REGION: $(params.toolchainRegion)
        TOOLCHAIN_ID: $(params.toolchainId)
    - apiVersion: v1
      kind: Secret
      metadata:
        name: cd-secret
      type: Opaque
      stringData:
        API_KEY: $(params.apikey)
    # k8s resources to be able to pull docker image from a specific container registry
    - apiVersion: v1
      kind: Secret
      metadata:
        name: private-registry-secret
      type: kubernetes.io/dockerconfigjson
      data:
        .dockerconfigjson: $(params.dockerconfigjson)
    # - apiVersion: v1
    #   kind: Secret
    #   metadata:
    #     name: private-registry-token
    #     annotations:
    #       tekton.dev/docker-0: https://registry.ng.bluemix.net
    #   type: kubernetes.io/basic-auth
    #   stringData:
    #     username: iamapikey
    #     password: $(params.containerRegistryToken)
    - apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: containerize-build-sa
      imagePullSecrets:
        - name: private-registry-secret
    - apiVersion: tekton.dev/v1alpha1
      kind: PipelineRun
      metadata:
        name: pipelinerun-$(uid)
      spec:
        pipelineRef:
          name: pipeline-simple-clone
        params:
          - name: pipeline-pvc
            value: pipelinerun-$(uid)-pvc
          - name: repository
            value: $(params.repository)
          - name: branch
            value: $(params.branch)
---
apiVersion: tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: trigger-binding-simple-clone
spec:
  params:
    - name: branch
      value: "master"
---
apiVersion: tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: event-listener-simple-clone
spec:
  triggers:
    - binding:
        name: trigger-binding-simple-clone
      template:
        name: trigger-template-simple-clone
