apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: ibmcloud-cluster-context
spec:
  inputs:
    params:
      - name: task-pvc
        description: the task pvc - this is the volume where the files (Dockerfile etc..) are expected to be
      - name: ibmcloudApi
        description: the ibmcloud api
        default: https://cloud.ibm.com
      - name: continuous-delivery-context-secret
        description: name of the configmap containing the continuous delivery pipeline context secrets
        default: cd-secret
      - name: clusterRegion
        description: the ibmcloud region hosting the cluster
        default: us-south
  stepTemplate:
    env:
      - name: API_KEY
        valueFrom:
          secretKeyRef:
            name: $(inputs.params.continuous-delivery-context-secret)
            key: API_KEY
  steps:
    - name: setup
      image: ibmcom/pipeline-base-image
      workingDir: /artifacts
      env:
        - name: HOME
          value: "/root"
        # - name: API_KEY
        #   value: $(inputs.params.apikey)
        # - name: API
        #   value: $(inputs.params.api)
        # - name: REGION
        #   value: $(inputs.params.toolchainRegion)
        # - name: TOOLCHAIN_ID
        #   value: $(inputs.params.toolchainId)
      command: ["/bin/bash", "-c"]
      args:
        - |
          set -e -o pipefail
          ls -l
          ls -l /cd-config
          env | sort | grep -v -i key
          echo "** toolchain.json content **"
          cat /cd-config/toolchain.json
          echo ""
          echo "****************************"
          TOOLCHAIN_ID=$(jq -r '.toolchain_guid' /cd-config/toolchain.json)
          TOOLCHAIN_REGION=$(jq -r '.region_id' /cd-config/toolchain.json | awk -F: '{print $3}')
          echo "Toolchain id is $TOOLCHAIN_ID"
          echo "Toolchain region is $TOOLCHAIN_REGION"
          #####################################
          echo "Fetching token for $REPOSITORY"
          ibmcloud config --check-version false
          ibmcloud login -a $(inputs.params.ibmcloudApi) -r $TOOLCHAIN_REGION --apikey $API_KEY
          TOKEN=$(ibmcloud iam oauth-tokens --output JSON | jq -r '.iam_token')
          #exit 1
      volumeMounts:
        - mountPath: /steps
          name: steps-volume
        - mountPath: /artifacts
          name: task-volume
        - mountPath: /cd-config
          name: cd-config-volume
  volumes:
    - name: steps-volume
      emptyDir: {}
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.task-pvc)
    - name: cd-config-volume
      configMap:
        name: toolchain
        items:
        - key: toolchain.json
          path: toolchain.json