apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: pipeline
spec:
  params:
    - name: pipeline-pvc
      description: the pipeline pvc name
    - name: repository
      description: the git repo
    - name: branch
      description: the branch for the git repo
  resources:
  # - name: app-image
  #   type: image
  - name: target-cluster
    type: cluster
  tasks:
    - name: pipeline-0-setup-task
      taskRef:
        name: fetch-iks-cluster-config
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: clusterPipelineResourcesDirectoryFallback
          value: .tekton-clusters
      resources:          
        inputs:
          - name: cluster
            resource: target-cluster
        outputs:
          - name: cluster
            resource: target-cluster
    - name: pipeline-1-kubectl-task
      taskRef:
        name: kubernetes-context-execution
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: task-pvc-mountpath
          value: /pipelinerun
        - name: clusterPipelineResourcesDirectory
          value: /pipelinerun/.tekton-clusters
        - name: script
          value: |
            echo "Here is the kubectl cluster-info:"
            kubectl cluster-info
            echo "I am listing the namespaces"
            kubectl get namespaces
            echo "Here is the kubectl cluster-info:"
      resources:          
        inputs:
          - name: cluster
            resource: target-cluster
            from:
              - pipeline-0-setup-task
    # - name: pipeline-1-clone-task
    #   runAfter: [pipeline-0-setup-task]
    #   taskRef:
    #     name: clone-repo-task
    #   params:
    #     - name: task-pvc
    #       value: $(params.pipeline-pvc)
    #     - name: repository
    #       value: $(params.repository)
    #     - name: branch
    #       value: $(params.branch)
    # - name: pipeline-2-containerize-task
    #   runAfter: [pipeline-1-clone-task]
    #   taskRef:
    #     name: containerize-task
    #   params:
    #     - name: task-pvc
    #       value: $(params.pipeline-pvc)
    #     # - name: additionalTags
    #     #   value: '1.0.0-static'
    #     # - name: additionalTagsScript
    #     #   value: |
    #     #     source /artifacts/build.properties
    #     #     # Add a specific tag with branch and commit
    #     #     #echo "1.0.0-${GIT_BRANCH}-${GIT_COMMIT}"
    #   resources:          
    #     outputs:
    #       - name: builtImage
    #         resource: app-image
    # - name: pipeline-3-va-task
    #   taskRef:
    #     name: vulnerability-advisor-task
    #   params:
    #     - name: task-pvc
    #       value: $(params.pipeline-pvc)
    #     - name: scanReportFile
    #       value: 'app-image-va-report.json'
    #     # - name: maxIteration
    #     #   value: '5'
    #     # - name: sleepTime
    #     #   value: '3'
    #     # - name: failOnScannedIssues          
    #     #   value: 'false'
    #   resources:          
    #     inputs:
    #       - name: image
    #         resource: app-image
    #         from:
    #           - pipeline-2-containerize-task
