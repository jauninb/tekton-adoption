apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: containerize-task
spec:
  inputs:
    params:
      - name: task-pvc
        description: the output pvc - this is where the clone repository will be stored
      # - name: apikey
      #   description: the ibmcloud api key
      # - name: api
      #   description: the ibmcloud api url
      #   default: https://cloud.ibm.com
      # - name: toolchainRegion
      #   description: the ibmcloud region hosting the toolchain
      #   default: us-south
      # - name: toolchainId
      #   description: the ibmcloud region hosting the toolchain
      # - name: propertiesFile
      #   description: file containing properties out of clone task
      #   default: build.properties
  outputs:
    resources:
      - name: builtImage
        type: image
  steps:
    - name: find-registry-creds
      image: ibmcom/pipeline-base-image
      workingDir: /steps
      env:
        - name: API
          valueFrom:
            configMapKeyRef:
              name: cd-config
              key: API
        - name: REGION
          valueFrom:
            configMapKeyRef:
              name: cd-config
              key: REGION
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: cd-secret
              key: API_KEY
      command: ["/bin/bash", "-c"]
      args:
        - |
          # Parse the image url to find information (region, namespace, image name)
          export IMAGE_URL=$(outputs.resources.builtImage.url)
          export CR_ENDPOINT=$(echo $(outputs.resources.builtImage.url) |  awk -F/ '{print $1}')
          export CR_NAMESPACE=$(echo $(outputs.resources.builtImage.url) |  awk -F/ '{print $2}')
          export IMAGE_NAME=$(echo $(outputs.resources.builtImage.url) |  awk -F/ '{print $3}')

          # Find the ibmcloud container registry region
          export CR_REGION=$(echo $CR_ENDPOINT | awk -F. '{print $1}')

          env | sort | grep -v -i key

          # ibmcloud login 
          ibmcloud config --check-version false
          ibmcloud login -a $API -r $REGION --apikey $API_KEY

          # Log container registry to the appropriate region
          ibmcloud cr region-set $CR_REGION

          # Create the namespace if needed
          ibmcloud cr namespaces
          
          # create a k8s secret yaml of type dockerconfig to transform into a docker config file
          # https://github.com/tektoncd/pipeline/blob/v0.7.0/docs/resources.md#image-resource

      volumeMounts:
        - mountPath: /steps
          name: steps-volume
    - name: build-docker-image
      image: registry.ng.bluemix.net/otc-images/otc-k8s-build:latest
      workingDir: /artifacts
      env:
        - name: HOME
          value: "/root"
        # - name: API_KEY
        #   value: $(inputs.params.apikey)
        # - name: API
        #   value: $(inputs.params.api)
        # - name: REGION
        #   value: $(inputs.params.toolchainRegion)
        # - name: TOOLCHAIN_ID
        #   value: $(inputs.params.toolchainId)
      command: ["/bin/bash", "-c"]
      args:
        - |
          set -e -o pipefail
          ls -l -R /builder/home/image-outputs
          #sleep 180s
      volumeMounts:
        - mountPath: /artifacts
          name: task-volume
        - mountPath: /steps
          name: steps-volume
  volumes:
    - name: steps-volume
      emptyDir: {}
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.task-pvc)
